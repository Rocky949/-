#include <iostream>
#include <time.h>
using namespace std;

void matrix_multiply_1(int *m1,int *m2,int *res,int n)
{
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			for(int k=0;k<n;k++)
				res[i*n+j] += m1[i*n+k]*m2[i*k+j];
}

void matrix_multiply_2(int *m1,int *m2,int *res,int n)
{
	for(int i=0;i<n;i++)
		for(int k=0;k<n;k++)
			for(int j=0;j<n;j++)
				res[i*n+j] += m1[i*n+k]*m2[i*k+j];
}

int main(){ 	
	int sum_time1,sum_time2;
	clock_t start_time,end_time;
	int n;
	cin>>n;
	
	int* m1 = new int[n*n];
	int* m2 = new int[n*n];
	int* res = new int[n*n];
	
	for(int i1=0;i1<n;i1++)
		for(int j1=0;j1<n;j1++)
			m1[i1*n+j1]=rand()%1000;
			
	for(int i2=0;i2<n;i2++)
		for(int j2=0;j2<n;j2++)
			m2[i2*n+j2]=rand()%1000;
			
	memset(res,0,sizeof(res));
	start_time=clock();
	matrix_multiply_1(m1,m2,res,n);
	end_time=clock();
	sum_time1=end_time-start_time;
	
	memset(res,0,sizeof(res));
	start_time=clock();
	matrix_multiply_2(m1,m2,res,n);
	end_time=clock();
	sum_time2=end_time-start_time;
	
	cout<<"未用cache运行的时间："<<sum_time1<<endl;
	cout<<"应用cache运行的时间："<<sum_time2<<endl;
	
	return 0;
}